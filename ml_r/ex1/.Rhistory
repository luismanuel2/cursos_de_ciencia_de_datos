swirl()
library("swirl")
library("swirl")
swirl()
select_language()
swirl()
help("apply")
mi_matriz <- matrix(data=1:16,nrow=4, ncol=4)
mi_matriz
apply(X=mi_matriz, MARGIN=2, FUN=min)
apply(X=mi_matriz, MARGIN=1, FUN=min)
e
e
help("apply")
x<- list("Introducción", "a", "la", "Programación", "Estadística", "con", "R")
mi_lista<- list("Introducción", "a", "la", "Programación", "Estadística", "con", "R")
mi_lista
formals(lapply)
mayusculas <-lapply(mi_lista, toupper)
mayusculas
class(mayusculas)
load(swirl_temp/ASA_estadisticasPasajeros(3).csv)
load("swirl_temp/ASA_estadisticasPasajeros(3).csv")
read.csv("swirl_temp/ASA_estadisticasPasajeros(3).csv",header = TRUE)
read.csv("swirl_temp/ASA_estadisticasPasajeros(3).csv")
asa_datos<-read.csv("swirl_temp/ASA_estadisticasPasajeros(3).csv")
View(asa_datos)
lapply(asa_datos, class)
asa_datos$Descripcion
unique(asa_datos$Descripcion)
unique(asa_datos$Estado)
sum(asa_datos$Pasajeros.nacionales)
asa_pasajeros <- asa_datos[,c("Pasajeros.nacionales", "Pasajeros.internacionales")]
view(asa_pasajeros)
View(asa_pasajeros)
ambas columna. Ingresa lapply(asa_pasajeros, sum)
lapply(asa_pasajeros, sum)
sapply(asa_pasajeros, sum)
?sapply
total_pasajeros<-sapply(asa_pasajeros, sum)
total_pasajeros
table(asa_datos$Estado)
tapply(asa_datos$Pasajeros.nacionales, asa_datos$Estado, sum)
tapply(asa_datos$Pasajeros.nacionales, asa_datos$Estado, mean)
tapply(asa_datos$Pasajeros.nacionales, asa_datos$Codigo.IATA, mean)
c(hola=1,col=2)
swirl()
View(mi_matriz)
demo(graphics)
plot(1:5)
plot(c(1, 2, 3), c(4, 5, 6))
?plot
plot(c(1, 2, 3), c(4, 5, 6), type="l")
plot(6:10,type="s")
plot(1:10,type="b")
plot(1:5, main="Mi gráfica")
plot(1:5, main="Mi gráfica",xlab="x",ylab="y")
points(c(1, 5), c(4, 2), col="green")
lines(c(1, 4), c(2, 5),
| col="yellow")
lines(c(1, 4), c(2, 5), col="yellow")
abline(h=3,col="red",lty=2)
ingresa abline(h=1:5,v=1:5, col="purple")
abline(h=1:5,v=1:5, col="purple")
data("iris")
class(iris)
head(iris)
plot(iris)
(iris$Petal.Length, iris$Petal.Width)
plot(iris$Petal.Length, iris$Petal.Width)
Ingresa hist(iris$Petal.Length, col="red")
hist(iris$Petal.Length, col="red")
hist(iris$Petal.Length,col="red", freq=FALSE)
hist(iris$Petal.Length, col="red", breaks=5)
?boxplot
boxplot(Sepal.Width ~ Species, data=iris, col=2:4)
ie(c(50, 50, 50), labels=levels(iris$Species))
pie(c(50, 50, 50), labels=levels(iris$Species))
?par
par()
par_orig <- par()
par("col")
par(col="blue")
load("iris")
load(iris)
data("iris")
plot(iris)
par()
par("col")
plot(iris, col=iris$Species)
w
data("iris")
info()
head(iris)
names(iris)
plot(iris$Sepal.Length, iris$Petal.Length, col =
| iris$Species)
plot(iris$Sepal.Length, iris$Petal.Length, col = iris$Species)
par(pch=15)
plot(iris$Sepal.Length, iris$Petal.Length, col = iris$Species)
iris
plot(iris$Sepal.Length,iris$Petal.Length, col = iris$Species, pch="A")
plot(iris$Sepal.Length,iris$Petal.Length, col = iris$Species)
plot(1:26, pch=0:25)
plot(iris$Sepal.Length, iris$Petal.Length, col = iris$Species, pch = 21, bg ="blue")
plot(iris$Sepal.Length, iris$Petal.Length, col = iris$Species, cex = 2)
legend(x = 4.5, y = 7, legend = levels(iris$Species), col = c(1:3), pch = 16)
par(par_orig)
colors()
help(grep)
grep("yellow", colors(), value=TRUE)
length(colors)
length(colors())
palette()
plot(1:8, col=1:8, main="Colores por índice", pch=17, cex=3)
plot(1:12, col=1:12, main="Colores reciclados", pch=18, cex=3)
paleta_arcoiris <- rainbow(10)
palette()
paleta_arcoiris
palette(paleta_arcoiris)
palette()
plot(1:10, col=1:10, main="Paleta Arcoiris",pch=17, cex=3)
paleta_calida <- heat.colors(10)
palette(paleta_calida)
plot(1:10, col=1:10, main="Paleta Cálida",pch=17, cex=3)
mi_paleta<-c("red", "green" y "#0019FFFF")
mi_paleta<-c("red", "green"  "#0019FFFF")
mi_paleta<-c("red","green","#0019FFFF")
plot(1:10, col=mi_paleta, main="Mi Paleta",pch=17, cex=3)
palette(mi_paleta)
plot(1:10, col=1:10, main="MiPaleta",pch=17, cex=3)
plot(1:10, col=1:10, main="Mi Paleta",pch=17, cex=3)
palette("default")
plot(1:20, type="n")
text(5, 5, "¡Hola Mundo!")
?text
text(11, 11, "¡Hola Mundo!x2", cex=2)
text(11, 11, "¡Hola Mundo! x2", cex=2)
text(7, 7, "¡Hola Mundo con Serif!", family="serif")
text(9, 9, "¡Hola Mundo con Mono!", family="mono")
text(13, 13, "¡Hola Mundo con Sans!", family="sans")
demo(plotmath)
plot(1:10, type="n",
| main=expression(alpha + beta))
plot(1:10, type="n",main=expression(alpha + beta))
plot(1:10, type="n", xlab = expression(paste("Valores de ", x^phi1)))
?plotmath
t <- 10
plot(1:t, main=substitute(paste("La gráfica del vector 1:", x),
| list(x=t)))
plot(1:t, main=substitute(paste("La gráfica del vector 1:", x), list(x=t)))
t <- 20
plot(1:t, main=substitute(paste("La gráfica del vector 1:",x), list(x=t)))
?substitute
data("iris")
head(iris)
x <- iris$Sepal.Length
y <- iris$Sepal.Length
y <- iris$Petal.Length
z<-iris$Sepal.Width
?rgl
open3d()
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width)
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width,
| type="s")
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s")
plot3d(iris$Sepal.Length, iris$Petal.Length,
| iris$Sepal.Width, type="s", col=rainbow(150))
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s", col=rainbow(150))
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s", col=as.integer(iris$Species))
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="s", col=as.integer(iris$Species), radius=1.5)
plot3d(iris$Sepal.Length, iris$Petal.Length, iris$Sepal.Width, type="l", col=as.integer(iris$Species), xlab ="Sepal.Length", ylab = "Petal.Length", zlab = "Sepal.Width")
?plot3d
texto<-"¡Hola Mundo!"
texto[1]
texto[2]
substring()
substring
info(substring
)
info(substring())
?substring
substring(tecto,1,4)
substring(texto,1,4)
ubstring(texto, 7, 11)
substring(texto, 7, 11)
substring(texto, 7, 11) <- "Swirl"
texto
nchar(texto)
paste("¡Adiós", "Mundo!")
paste("¡Adiós",
| "Mundo!", sep="_")
paste("¡Adiós","Mundo!", sep="_")
i<-9
sprintf("El cuadrado de %d es %d", i, i^2
)
?sprintf
strsplit("Me/gusta/programar/en/R", "/")
chartr("o", "a", "¡Hola Mundo!")
patron<-"H(a|ä|ae)ndel"
musicos
grep(patron, musicos)
nuevo_patron <-".(a|ä|ae|e)ndel"
nuevo_patron
grep(nuevo_patron, musicos)
egexpr(patron, musicos)
regexpr(patron, musicos)
gregexpr(patron, "Georg Friedrich Händel, en inglés George Frideric Handel fue un compositor alemán.")
?regexpr
data(diamonds)
View(diamonds)
?qplot
qplot(color, data=diamonds)
qplot(carat, price, data=diamonds)
qplot(log(carat), log(price), data=diamonds)
qplot(carat, x*y*z, data=diamonds)
qplot(carat, price, data=diamonds,color=color)
qplot(carat, price, data=diamonds, shape=cut)
(1/10)
I(1/10)
1/10
qplot(carat, price, data=diamonds, alpha=I(1/10))
qplot(carat, price, data=diamonds, alpha=I(1/100))
qplot(carat, price,data=diamonds, size=table)
plot(carat, price, data=diamonds, facets = color ~ .)
qplot(carat, price, data=diamonds, facets = color ~ .)
qplot(carat, price, data=diamonds, geom = c("point", "smooth"))
qplot(color, price/carat, data=diamonds, geom = "jitter")
qplot(color, price/carat, data=diamonds, geom = "boxplot")
0
0
0
0
info}89
info()
main()
?Normal
help(Distributions)
?rbinom
rbinom(1, 7, 0.5)
rbinom(100000, 7, 0.5)
resultado <- rbinom(100000, 7, 0.5)
tail(resultado)
?tail
tail(resultado > 5)
mean(resultado > 5)
?set.seed
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
y
length(y)
class(y)
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/J.R')
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/J.R')
o<-matrix(c(1,2,3,4), nrow =2, ncol = 2)
o
o**
o
o**2
theta<-rbind(0,0)
theta
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/J.R')
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
x
theta
x*theta
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
theta
theta<-rbind(-1,2)
theta
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
t(c(1,2,3))
c(1,2,3)
t(rep(0,6))
y
t(y)
dim(y)
dim(theta)
dim(t(y))
Jh<-rep(0,6)
jh
Jh
Jh(1)<-1
Jh[1]<-1
Jh
a
a<-c(1,2)
b<-c(3,4,5,7)
e<-list(a,b)
e
f<-e[1]
f
g<-e[[1]]
g
source('C:/Users/luism/Dropbox/ciencia de datos/ml_r/ex1/ex1.R')
for(i in 1:7){
print(i)
}
